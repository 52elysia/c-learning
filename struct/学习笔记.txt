初始结构体
重点
1：结构体类型的声明
2：结构体的初始化
3：结构体成员的访问
4：结构体传参

1：定义看详细纸质笔记
结构体是描述一个复杂对象的变量
它是一个语句句末也要加；
创建的俩种方式见代码文件
struct stu（结构体关键字）
{
  成员变量
  可以是不同类型
}s1，s2，s3； （创建的是全局变量）不建议使用
创建变量
struct stu s1={}；

typedef struct stu（结构体关键字）
{
  成员变量
  可以是不同类型
}stu；
结构体重命名
创建变量
stu s1={}；
注：创建一个结构体冰不占用内存的空间，结构体的成员变量也可以是结构体

2.结构体的初始化
struct stu s1={}；
stu t1={}；
3.结构体成员的访问
俩种访问方式
例如 
s1.成员名
s1.结构体.成员名
指针方式
&s1->成员名
4结构体的传参
传值
传址
传地址相对于传值能够节省空间
这里会提及到栈区，堆区，静态区的概念
在内存中有栈区，堆区，静态区。分别用来存储
-静态区(static)：全局变量存储，在程序的整个生命周期都存在

-栈区(stack)：局部变量存储（自动，连续的内存）

-堆区(heap)：动态存储（非常大的内存池，非连续分配）
每次函数调用都会在栈区开辟内存，参数的存储也需要开辟内存，而传参的动作可以称为压栈，操作类似于步枪的弹夹我们要使用子弹必须先进行填装从上向下挤压，而使用子弹就要从下向上调出，传参传值是对参数的一份临时拷贝会占用双份的内存，而传地址则传递了原参数的地址，需要使用这个参数的时候可以直接通过地址找到参数进行解引用操作等。补充插入一个元素叫做压栈，删除一个元素叫做出栈。
